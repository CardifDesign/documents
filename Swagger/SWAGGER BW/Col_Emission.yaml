openapi: 3.0.1
info:
  title: Emission Service
  description: <hr/>Emission Data Service 1.0 <br/>For WAS systems <br/>Low Risk Development
    Enviroment.  <hr/>By Architecture Team. <br/>July 2020. <br/>Cardif Colombia.
    <br/>
  license:
    name: Cardif Colombia Seguros Generales S.A
    url: https://bnpparibascardif.com.co/
  version: 1.0.0
servers:
  - url: //10.170.170.85:9080/ws-emission
tags:
- name: emission-impl
  description: Emission Impl
paths:
  /v1/event-request:
    put:
      tags:
      - Request
      summary: Update a given emission request.
      description: Update a given emission request.
      operationId: requestPutUsingPUT
      requestBody:
        description: EmissionRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmissionRequestStatus'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthApproval'
        204:
          description: Error updated emissionRequestsStatus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthApproval'
        404:
          description: Bad Request
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: EmissionRequest
    post:
      tags:
      - EmissionRequests
      summary: create emission
      description: create emission
      operationId: requestPostUsingPOST
      requestBody:
        description: emission
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmissionGlobalRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmissionGlobalRequest'
        404:
          description: Bad Request
          content: {}
        422:
          description: Unprocessable Entity
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: emission
  /v1/ping:
    get:
      tags:
      - Default
      summary: Server heartbeat operation
      description: This operation is to know if the service is active
      operationId: pingUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BNPResponsePing'
        500:
          description: Error de servidor/servicio inactivo, validar con soporte cardif.
          content: {}
  /v1/request:
    post:
      tags:
      - Request
      summary: Add a new emission request
      description: Add a new emission request
      operationId: requestUsingPOST
      requestBody:
        description: emissionRequestData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmissionRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmissionResponse'
        404:
          description: Bad Request
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: emissionRequest
  /v1/request/health-approval:
    put:
      tags:
      - Health
      summary: Updates a health appoinment to an emission request
      description: Updates a health appoinment to an emission request
      operationId: requestHelathPutUsingPUT
      requestBody:
        description: healthApprovalAppointment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthApprovalAppointment'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthApprovalAppointment'
        404:
          description: Bad Request
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: healthApprovalAppointment
  /v1/request/life-begin:
    get:
      tags:
      - Life Emission
      summary: Gets emissions in pending status for life products.
      description: Gets emissions in pending status for life products.
      operationId: requestLifeBeginGetUsingGET
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmissionPending'
        404:
          description: Bad Request
          content: {}
        500:
          description: Internal server error
          content: {}
  /v1/request/life-status:
    put:
      tags:
      - Life Emission
      summary: Update status of life products emission event.
      description: Update status of life products emission event.
      operationId: requestLifeStatusPutUsingPUT
      parameters:
      - name: eventId
        in: query
        description: Unique identifier of event
        required: true
        schema:
          type: string
      - name: status
        in: query
        description: Event status
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifeStatusResponse'
        404:
          description: Bad Request
          content: {}
        500:
          description: Internal server error
          content: {}
  /v1/request/{partner_id}:
    get:
      tags:
      - Request
      summary: get information from events emission by document number and document
        type.
      description: get information from events emission by document number and document
        type.
      operationId: requestGetUsingGET
      parameters:
      - name: partner_id
        in: path
        description: Partner Id
        required: true
        schema:
          type: integer
          format: int32
      - name: documentNumber
        in: query
        description: Document number
        required: true
        schema:
          type: string
      - name: documentType
        in: query
        description: Document type
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventEmission'
        404:
          description: Bad Request
          content: {}
        500:
          description: Internal server error
          content: {}
  /v1/requests:
    get:
      tags:
      - EmissionRequests
      summary: List all requests for channel and status
      description: List all requests for channel and status
      operationId: requestsUsingGET
      parameters:
      - name: emissionType
        in: query
        description: Emission Event type
        schema:
          type: string
      - name: emissionStatus
        in: query
        description: Emission Status
        schema:
          type: string
      - name: partnerId
        in: query
        description: Partner Identifier
        schema:
          type: string
      - name: initialSearchDate
        in: query
        description: Initial Date for Searching
        schema:
          type: string
      - name: finalSearchDate
        in: query
        description: Final Date for Searching
        schema:
          type: string
      - name: customerDocumentType
        in: query
        description: Customer's identity document type
        schema:
          type: string
      - name: customerDocumentNumber
        in: query
        description: Customer's identity document number
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Requests'
        204:
          description: No Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Requests'
        404:
          description: Bad Request
          content: {}
        500:
          description: Internal server error
          content: {}
  /v2/event-request:
    post:
      tags:
      - EmissionRequests
      summary: create emission
      description: create emission
      operationId: requestPostUsingPOST_1
      requestBody:
        description: emission
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmissionGlobalRequestV2'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmissionGlobalRequest'
        404:
          description: Bad Request
          content: {}
        422:
          description: Unprocessable Entity
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: emission
  /v2/ping:
    get:
      tags:
      - Default
      summary: Server heartbeat operation
      description: This operation is to know if the service is active
      operationId: pingUsingGET_1
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BNPResponsePing'
        500:
          description: Error de servidor/servicio inactivo, validar con soporte cardif.
          content: {}
  /v2/requests:
    get:
      tags:
      - EmissionRequests
      summary: List all emissions associated with an advisor status
      description: List all emissions associated with an advisor status
      operationId: requestsUsingGET_1
      parameters:
      - name: eventType
        in: query
        description: Event type
        schema:
          type: string
      - name: eventStatus
        in: query
        description: Event Status
        schema:
          type: string
      - name: advisorId
        in: query
        description: advisor
        schema:
          type: string
      - name: initialSearchDate
        in: query
        description: Initial Date for Searching
        schema:
          type: string
      - name: finalSearchDate
        in: query
        description: Final Date for Searching
        schema:
          type: string
      - name: partnerId
        in: query
        description: partner
        schema:
          type: string
      - name: emissionStatus
        in: query
        description: Emission Status
        schema:
          type: string
      - name: customerIdType
        in: query
        description: ' Customer Doc Type'
        schema:
          type: string
      - name: customerIdNumber
        in: query
        description: Customer Number
        schema:
          type: string
      - name: policyNumber
        in: query
        description: Policy Number
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestsV2'
        204:
          description: No Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestsV2'
        404:
          description: Bad Request
          content: {}
        500:
          description: Internal server error
          content: {}
  /v2/update-attribute:
    put:
      tags:
      - Request
      summary: Update attribute to emissionInfo (emission clob)
      description: Update only one attribute to Clob flied in emission table
      operationId: requestPutAttributeUsingPUT
      requestBody:
        description: EmissionRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmissionRequestUpdateAttribute'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthApproval'
        204:
          description: Error updated emissionRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthApproval'
        404:
          description: Bad Request
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: EmissionRequest
  /v2/update-event:
    put:
      tags:
      - Request
      summary: Update atributtes status event
      description: Update atributtes status event
      operationId: requestPutUsingPUT_1
      requestBody:
        description: EmissionRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmissionRequestUpdate'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthApproval'
        204:
          description: Error updated emissionRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthApproval'
        404:
          description: Bad Request
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: EmissionRequest
components:
  schemas:
    Appointment:
      title: Appointment
      required:
      - appointmentStatus
      type: object
      properties:
        appointmentDate:
          type: string
          description: appointmentDate
        appointmentStatus:
          type: string
          description: appointmentStatus
          enum:
          - P
          - C
          - D
        confirm:
          type: string
          description: confirm
          enum:
          - S
          - N
        result:
          type: string
          description: Confirmacion del resultado de la cita
          enum:
          - S
          - N
    BNPResponse:
      title: BNPResponse
      type: object
      properties:
        bodyResponse:
          type: object
          properties: {}
          description: Object Response Method
        message:
          type: string
          description: Description
        returnCode:
          type: integer
          description: Return Code
          format: int32
    BNPResponsePing:
      title: BNPResponsePing
      type: object
      properties:
        dateTest:
          type: string
          description: dd-MM-yyyy HH:mm
    Beneficiary:
      title: Beneficiary
      type: object
      properties:
        beneficiaryDocumentNumber:
          type: string
          description: Numero de documento beneficiario
        beneficiaryDocumentType:
          type: string
          description: Tipo de documento beneficiario
        beneficiaryDocumentTypeId:
          type: string
          description: Id tipo de documento beneficiario
        beneficiaryFirstName:
          type: string
          description: Primer nombre de beneficiario
        beneficiaryLastName:
          type: string
          description: Primer apellido de beneficiario
        beneficiaryMiddleName:
          type: string
          description: Segundo nombre de beneficiario
        beneficiaryPercentage:
          type: string
          description: Porcentaje de participacion
        beneficiaryPercentageId:
          type: string
          description: Id Porcentaje de participacion
        beneficiaryRelationship:
          type: string
          description: descripcion de la relacion
        beneficiaryRelationshipId:
          type: string
          description: Id descripcion de la relacion
        beneficiarySurname:
          type: string
          description: Segundo apellido beneficiario
        beneficiaryType:
          type: string
          description: Tipo de beneficiario
        birthCountry:
          type: string
          description: Birth country
        birthDate:
          type: string
          description: Birth date
        policyNumber:
          type: string
          description: Numero de poliza
    ClobInfoEmission:
      title: ClobInfoEmission
      type: object
      properties:
        generateClobFlag:
          type: string
          description: generate clob flag (S-N)
          enum:
          - S
          - N
    Emission:
      title: Emission
      required:
      - advisoryDocumentNumber
      - channel
      - emissionStatus
      - event
      - eventUser
      - plan
      - productId
      - segment
      - subProduct
      type: object
      properties:
        advisoryDocumentNumber:
          type: string
          description: advisory document number
        advisoryDocumentType:
          type: string
          description: advisory document type
        channel:
          type: integer
          description: channel generating the event
          format: int32
        emissionInfo:
          type: string
          description: Emission details
        emissionStatus:
          type: string
          description: emission status
          enum:
          - BG
          - CL
          - CN
          - SC
          - PN
          - FL
          - OT
          - CI
          - EI
          - FC
          - FE
          - F
          - S
          - P
        event:
          $ref: '#/components/schemas/Event'
        eventUser:
          type: string
          description: user generating the event
        insuredValue:
          type: integer
          description: Insured value of proposed policy
          format: int32
        newPolicy:
          type: string
          description: New policy
        plan:
          type: integer
          description: Product plan of emission
          format: int32
        productId:
          type: integer
          description: Product plan of emission
          format: int32
        requestEmissionDate:
          type: string
          description: request emission date
        segment:
          type: string
          description: Product segment of emission
        subProduct:
          type: integer
          description: Sub product of emission
          format: int32
    EmissionGlobalRequest:
      title: EmissionGlobalRequest
      required:
      - clobInfoEmission
      - emission
      - oldPolicy
      - partner
      - person
      type: object
      properties:
        clobInfoEmission:
          $ref: '#/components/schemas/ClobInfoEmission'
        emission:
          $ref: '#/components/schemas/EmissionInformation'
        oldPolicy:
          $ref: '#/components/schemas/OldPolicy'
        partner:
          $ref: '#/components/schemas/Partner'
        person:
          $ref: '#/components/schemas/Person'
    EmissionGlobalRequestV2:
      title: EmissionGlobalRequestV2
      required:
      - clobInfoEmission
      - emission
      - eventId
      - oldPolicy
      - partner
      - person
      type: object
      properties:
        clobInfoEmission:
          $ref: '#/components/schemas/ClobInfoEmission'
        emission:
          $ref: '#/components/schemas/EmissionInformation'
        eventId:
          type: integer
          description: eventId
          format: int32
        oldPolicy:
          $ref: '#/components/schemas/OldPolicy'
        partner:
          $ref: '#/components/schemas/Partner'
        person:
          $ref: '#/components/schemas/Person'
    EmissionInformation:
      title: EmissionInformation
      required:
      - advisoryDocumentNumber
      - channel
      - emissionStatus
      - eventStatus
      - eventType
      - eventUser
      - plan
      - productId
      - segment
      - subProduct
      type: object
      properties:
        advisoryDocumentNumber:
          type: string
          description: advisory document number
        advisoryDocumentType:
          type: string
          description: advisory document type
        channel:
          type: integer
          description: channel generating the event
          format: int32
        emissionInfo:
          type: string
          description: Emission details
        emissionStatus:
          type: string
          description: emission status
        eventStatus:
          type: string
          description: Event status
        eventType:
          type: string
          description: Event type
        eventUser:
          type: string
          description: user generating the event
        insuredValue:
          type: integer
          description: Insured value of proposed policy
          format: int32
        newPolicy:
          type: string
          description: New policy
        plan:
          type: integer
          description: Product plan of emission
          format: int32
        productId:
          type: integer
          description: Product plan of emission
          format: int32
        segment:
          type: string
          description: Product segment of emission
        subProduct:
          type: integer
          description: Sub product of emission
          format: int32
    EmissionLifeEmission:
      title: EmissionLifeEmission
      type: object
      properties:
        emissionId:
          type: string
          description: emissionId
        insuredValue:
          type: integer
          description: insuredValue
          format: int32
        plan:
          type: string
          description: plan
        productId:
          type: string
          description: productId
        subProductId:
          type: string
          description: subProductId
    EmissionPending:
      title: EmissionPending
      type: object
      properties:
        channel:
          type: string
          description: channel
        cumulus:
          type: array
          items:
            $ref: '#/components/schemas/ProductsAmmount'
        emission:
          $ref: '#/components/schemas/EmissionLifeEmission'
        eventDate:
          type: string
          description: eventDate
        eventId:
          type: string
          description: Event identifier
        health:
          $ref: '#/components/schemas/HealthLifeEmission'
        person:
          $ref: '#/components/schemas/PersonLifeEmission'
    EmissionRequest:
      title: EmissionRequest
      required:
      - emission
      - health
      - partnerId
      - person
      - productsAmmount
      type: object
      properties:
        beneficiaries:
          type: array
          description: beneficiaries
          items:
            $ref: '#/components/schemas/Beneficiary'
        emission:
          $ref: '#/components/schemas/EmissionInformation'
        generateClobFlag:
          type: string
          description: Flag para identificar si se debe generar Json layout para emision
          enum:
          - S
          - N
        health:
          $ref: '#/components/schemas/Health'
        partnerId:
          type: integer
          description: Partner ID
          format: int32
        person:
          $ref: '#/components/schemas/Person'
        policyNumberOld:
          type: string
          description: Numero de poliza antigua, se utiliza ara extraer informacion
            del layout y datos del cliente en stok
        productsAmmount:
          type: array
          description: productsAmmount
          items:
            $ref: '#/components/schemas/ProductsAmmount'
    EmissionRequestStatus:
      title: EmissionRequestStatus
      required:
      - customerDocumentNumber
      - customerDocumentType
      - emissionStatus
      - policyNumber
      - requestEmissionDate
      - updateEmissionDate
      type: object
      properties:
        customerDocumentNumber:
          type: string
          description: Customer Document Number
        customerDocumentType:
          type: string
          description: Customer Document Type
        emissionStatus:
          type: string
          description: Emission Status
          enum:
          - BG
          - CL
          - CN
          - SC
          - PN
          - FL
          - OT
          - CI
          - EI
          - FC
          - FE
          - F
          - S
          - P
        eventId:
          type: string
          description: Event id
        policyNumber:
          type: string
          description: Emission policyNumber
        productId:
          type: string
          description: Product id
        requestEmissionDate:
          type: string
          description: Request emission Date
        updateEmissionDate:
          type: string
          description: update emission Date
    EmissionRequestUpdate:
      title: EmissionRequestUpdate
      required:
      - emissionStatus
      - eventId
      - eventStatus
      type: object
      properties:
        emissionInfo:
          type: string
          description: Emision Info
        emissionStatus:
          type: string
          description: Emission Status
        eventId:
          type: string
          description: Event id
        eventStatus:
          type: string
          description: Event Status
    EmissionRequestUpdateAttribute:
      title: EmissionRequestUpdateAttribute
      required:
      - emissionInfoDataTypeTag
      - emissionInfoTag
      - emissionInfoValueTag
      - eventId
      type: object
      properties:
        emissionInfo:
          type: string
          description: all emissionInfo object before change
        emissionInfoDataTypeTag:
          type: string
          description: Data type from emissionInfo tag
        emissionInfoTag:
          type: string
          description: Tag from emissionInfo
        emissionInfoValueTag:
          type: string
          description: Value tag from emissionInfo
        eventId:
          type: string
          description: Event id
    EmissionResponse:
      title: EmissionResponse
      type: object
      properties:
        evnId:
          type: integer
          description: Events_co ID
          format: int32
        prsId:
          type: integer
          description: Pers_co ID
          format: int32
    Event:
      title: Event
      type: object
      properties:
        eventId:
          type: integer
          description: Event ID
          format: int32
        eventStatus:
          type: string
          description: Event status
        eventType:
          type: string
          description: Event type
    EventEmission:
      title: EventEmission
      type: object
      properties:
        birthCity:
          type: string
          description: Birth city
        birthCountry:
          type: string
          description: Birth country
        birthDate:
          type: string
          description: Birth date
        birthDepartment:
          type: string
          description: Birth deparmetn
        documentNumber:
          type: string
          description: Numero de documento
        documentType:
          type: string
          description: Tipo de documento
        firstName:
          type: string
          description: First name
        gender:
          type: string
          description: Gender
        lastName:
          type: string
          description: Last name
        marithalStatus:
          type: string
          description: Marithal status
        middleName:
          type: string
          description: Middle name
        newPolicy:
          type: string
          description: EEM_NEW_POLICY
        pinDeathDate:
          type: string
          description: PIN_DEATH_DATE
        plan:
          type: string
          description: EEM_PLAN
        subProduct:
          type: string
          description: EEM_SUBPRODUCT
        surname:
          type: string
          description: Surname
    Health:
      title: Health
      required:
      - reqHealth
      type: object
      properties:
        appointment:
          $ref: '#/components/schemas/Appointment'
        authorization:
          type: string
          description: Describes if declaration is required
        declaration:
          type: string
          description: Describes
          enum:
          - S
          - N
        healthStatus:
          type: string
          description: Describes if declaration is required
          enum:
          - P
          - U
          - C
        reqHealth:
          type: string
          description: Requires examination
          enum:
          - S
          - N
    HealthApproval:
      title: HealthApproval
      required:
      - authotizattion
      - documentNumber
      - documentType
      - healhStatus
      - partnerId
      type: object
      properties:
        authotizattion:
          type: string
          description: Health approval code
        documentNumber:
          type: integer
          description: Document number
          format: int32
        documentType:
          type: string
          description: Document type
        healhStatus:
          type: string
          description: Health approval status
          enum:
          - P
          - U
          - C
        partnerId:
          type: integer
          description: partnerId
          format: int32
    HealthApprovalAppointment:
      title: HealthApprovalAppointment
      required:
      - authotizattion
      - documentNumber
      - documentType
      - healhStatus
      - partnerId
      - productId
      type: object
      properties:
        appointment:
          $ref: '#/components/schemas/Appointment'
        authotizattion:
          type: string
          description: Health approval code
        documentNumber:
          type: integer
          description: Document number
          format: int32
        documentType:
          type: string
          description: Document type
        healhStatus:
          type: string
          description: Health approval status
          enum:
          - P
          - U
          - C
        partnerId:
          type: integer
          description: partnerId
          format: int32
        productId:
          type: integer
          description: productId
          format: int32
    HealthLifeEmission:
      title: HealthLifeEmission
      type: object
      properties:
        authorization:
          type: string
          description: authorization
        declaration:
          type: string
          description: declaration
        healthRequired:
          type: string
          description: healthRequired
    LifeStatusResponse:
      title: LifeStatusResponse
      type: object
      properties:
        updateStatus:
          type: string
          description: updateStatus
    OldPolicy:
      title: OldPolicy
      type: object
      properties:
        oldPolicyNumber:
          type: string
          description: old number policy
    Partner:
      title: Partner
      required:
      - partnerId
      type: object
      properties:
        partnerId:
          type: integer
          description: Id Partner
          format: int32
    Person:
      title: Person
      required:
      - documentNumber
      - documentType
      type: object
      properties:
        birthDate:
          type: string
          description: Person date of birth
        documentNumber:
          type: string
          description: Person identification number
        documentType:
          type: string
          description: Type of identification
        expeditionDocumentDate:
          type: string
          description: Date of identification document expedition
        firstName:
          type: string
          description: Person first name
        gender:
          type: string
          description: Person gender
          enum:
          - M
          - F
          - H
          - T
          - N
        lastName:
          type: string
          description: Person last name
        middleName:
          type: string
          description: Person middle namen
        secondLastName:
          type: string
          description: Person second last name
    PersonLifeEmission:
      title: PersonLifeEmission
      type: object
      properties:
        age:
          type: integer
          description: age
          format: int32
        birthDate:
          type: string
          description: birthDate
        documentNumber:
          type: string
          description: documentNumber
        documentType:
          type: string
          description: documentType
    ProductsAmmount:
      title: ProductsAmmount
      type: object
      properties:
        ammount:
          type: integer
          description: Total ammount of product coverage
        cumulosStatus:
          type: string
          description: cumulosStatus
          enum:
          - P
          - U
          - C
        productGroup:
          type: string
          description: Group of product
    Requests:
      title: Requests
      type: object
      properties:
        emission:
          $ref: '#/components/schemas/Emission'
        partner:
          $ref: '#/components/schemas/Partner'
        person:
          $ref: '#/components/schemas/Person'
    RequestsV2:
      title: RequestsV2
      type: object
      properties:
        emission:
          $ref: '#/components/schemas/Emission'
        otpNumber:
          type: string
          description: otp number
        partner:
          $ref: '#/components/schemas/Partner'
        person:
          $ref: '#/components/schemas/Person'
